{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"_",
				"_room_capacities"
			],
			[
				"work",
				"workouts"
			],
			[
				"instr",
				"instr_id"
			],
			[
				"workt",
				"workout_class"
			],
			[
				"room",
				"_room_capacities"
			],
			[
				"U",
				"UnreliableMagicCarpet"
			],
			[
				"__",
				"__init__"
			],
			[
				"hour",
				"hours_per_month"
			],
			[
				"max",
				"max_size"
			],
			[
				"to",
				"total_s"
			],
			[
				"a",
				"ascii_lowercase"
			],
			[
				"tota",
				"total_salary"
			],
			[
				"tot",
				"total_salary"
			]
		]
	},
	"buffers":
	[
		{
			"file": "assignments/a0/gym_sample_tests.py",
			"settings":
			{
				"buffer_size": 10761,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "assignments/a0/gym.py",
			"settings":
			{
				"buffer_size": 33329,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					86,
					2,
					"anaconda_auto_format",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAndQAAAAAAACd1AAAAAAAAAAAAAAAA8L8"
				],
				[
					46,
					1,
					"nv_vi_dd",
					{
						"count": 1,
						"mode": "mode_internal_normal",
						"register": "\""
					},
					"AQAAAJFwAAAAAAAAkXAAAAAAAAAtAAAAICAgICAgICBuZXdfbGlzdCA9IHNlbGYuX2NlcnRpZmljYXRlcy5jb3B5KCkK",
					"AQAAAAAAAAABAAAApHAAAAAAAACkcAAAAAAAAAAAAAAAAPC/"
				],
				[
					55,
					1,
					"nv_vi_paste",
					{
						"before_cursor": false,
						"count": 1,
						"mode": "mode_internal_normal",
						"register": "\""
					},
					"AQAAAKlwAAAAAAAA1nAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAn3AAAAAAAACfcAAAAAAAAAAAAAAAAPC/"
				],
				[
					60,
					1,
					"nv_vi_dd",
					{
						"count": 1,
						"mode": "mode_internal_normal",
						"register": "\""
					},
					"AQAAAJFwAAAAAAAAkXAAAAAAAAAYAAAAICAgICAgICByZXR1cm4gbmV3X2xpc3QK",
					"AQAAAAAAAAABAAAAmXAAAAAAAACZcAAAAAAAAAAAAAAAAPC/"
				],
				[
					65,
					1,
					"nv_vi_d",
					{
						"count": 1,
						"mode": "mode_visual",
						"register": "\""
					},
					"AQAAAJlwAAAAAAAAmXAAAAAAAAAKAAAAbmV3X2xpc3QgPQ",
					"AQAAAAAAAAABAAAAmXAAAAAAAACjcAAAAAAAAAAAAAAAAPC/"
				],
				[
					68,
					1,
					"insert",
					{
						"characters": "return"
					},
					"BgAAAJlwAAAAAAAAmnAAAAAAAAAAAAAAmnAAAAAAAACbcAAAAAAAAAAAAACbcAAAAAAAAJxwAAAAAAAAAAAAAJxwAAAAAAAAnXAAAAAAAAAAAAAAnXAAAAAAAACecAAAAAAAAAAAAACecAAAAAAAAJ9wAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmXAAAAAAAACZcAAAAAAAAAAAAAAAAPC/"
				],
				[
					80,
					1,
					"nv_vi_big_d",
					{
						"count": 1,
						"mode": "mode_internal_normal",
						"register": "\""
					},
					"AQAAALJwAAAAAAAAsnAAAAAAAAAHAAAALmNvcHkoKQ",
					"AQAAAAAAAAABAAAAsnAAAAAAAACycAAAAAAAAAAAAAAAAPC/"
				],
				[
					213,
					1,
					"sequence",
					{
						"commands":
						[
							[
								"nv_vi_big_a",
								{
									"count": 1,
									"mode": "mode_internal_normal"
								}
							],
							[
								"insert_snippet",
								{
									"contents": "[$0]"
								}
							],
							[
								"insert",
								{
									"characters": ":"
								}
							]
						]
					},
					"AgAAALJwAAAAAAAAtHAAAAAAAAAAAAAAs3AAAAAAAAC0cAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsXAAAAAAAACxcAAAAAAAAAAAAAAAAPC/"
				],
				[
					449,
					1,
					"nv_vi_d",
					{
						"count": 1,
						"mode": "mode_visual",
						"register": "\""
					},
					"AQAAAMFkAAAAAAAAwWQAAAAAAADBAgAAZWxpZiBzZWxmLm5hbWUgIT0gb3RoZXIubmFtZSBvciBzZWxmLl9pbnN0cnVjdG9ycy5rZXlzKAogICAgICAgICAgICAgKSAhPSBvdGhlci5faW5zdHJ1Y3RvcnMua2V5cygpIG9yIFwKICAgICAgICAgICAgIHNlbGYuX3dvcmtvdXRzLmtleXMoKSAhPSBvdGhlci5fd29ya291dHMua2V5cygpIG9yIFwKICAgICAgICAgICAgIHNlbGYuX3Jvb21fY2FwYWNpdGllcy5rZXlzKCkgIT0gb3RoZXIuX3Jvb21fY2FwYWNpdGllcy5rZXlzKCk6CiAgICAgICAgICAgIHJldHVybiBGYWxzZQogICAgICAgIGVsc2U6CiAgICAgICAgICAgIHJldHVybiBhbGwoc2VsZi5faW5zdHJ1Y3RvcnNba2V5XSA9PSBvdGhlci5faW5zdHJ1Y3RvcnNba2V5XSBmb3Iga2V5CiAgICAgICAgICAgICAgICAgICBpbiBsaXN0KHNlbGYuX2luc3RydWN0b3JzLmtleXMoKSkpIGFuZCBhbGwoCiAgICAgICAgICAgICAgICAgICBzZWxmLl93b3Jrb3V0c1trZXldID09IG90aGVyLl93b3Jrb3V0c1trZXldIGZvciBrZXkKICAgICAgICAgICAgICAgICAgIGluIGxpc3Qoc2VsZi5fd29ya291dHMua2V5cygpKSkgYW5kIGFsbCgKICAgICAgICAgICAgICAgICAgIHNlbGYuX3Jvb21fY2FwYWNpdGllc1trZXldID09IG90aGVyLl9yb29tX2NhcGFjaXRpZXNba2V5XSBcCiAgICAgICAgICAgICAgICAgICBmb3Iga2V5IGluIGxpc3Qoc2VsZi5fcm9vbV9jYXBhY2l0aWVzLmtleXMoKSkp",
					"AQAAAAAAAAABAAAAgmcAAAAAAADBZAAAAAAAAAAAAAAAAPC/"
				],
				[
					453,
					1,
					"insert",
					{
						"characters": "return"
					},
					"BgAAAMFkAAAAAAAAwmQAAAAAAAAAAAAAwmQAAAAAAADDZAAAAAAAAAAAAADDZAAAAAAAAMRkAAAAAAAAAAAAAMRkAAAAAAAAxWQAAAAAAAAAAAAAxWQAAAAAAADGZAAAAAAAAAAAAADGZAAAAAAAAMdkAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwWQAAAAAAADBZAAAAAAAAAAAAAAAAPC/"
				],
				[
					454,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMdkAAAAAAAAyGQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAx2QAAAAAAADHZAAAAAAAAAAAAAAAAPC/"
				],
				[
					464,
					1,
					"insert",
					{
						"characters": "self._in"
					},
					"CAAAAMhkAAAAAAAAyWQAAAAAAAAAAAAAyWQAAAAAAADKZAAAAAAAAAAAAADKZAAAAAAAAMtkAAAAAAAAAAAAAMtkAAAAAAAAzGQAAAAAAAAAAAAAzGQAAAAAAADNZAAAAAAAAAAAAADNZAAAAAAAAM5kAAAAAAAAAAAAAM5kAAAAAAAAz2QAAAAAAAAAAAAAz2QAAAAAAADQZAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyGQAAAAAAADIZAAAAAAAAAAAAAAAAPC/"
				],
				[
					465,
					1,
					"insert_completion",
					{
						"completion": "_instructors",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "_instructors"
					},
					"AgAAAM1kAAAAAAAAzWQAAAAAAAADAAAAX2luzWQAAAAAAADZZAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0GQAAAAAAADQZAAAAAAAAAAAAAAAAPC/"
				],
				[
					466,
					1,
					"insert",
					{
						"characters": " =="
					},
					"AwAAANlkAAAAAAAA2mQAAAAAAAAAAAAA2mQAAAAAAADbZAAAAAAAAAAAAADbZAAAAAAAANxkAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2WQAAAAAAADZZAAAAAAAAAAAAAAAAPC/"
				],
				[
					467,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANxkAAAAAAAA3WQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3GQAAAAAAADcZAAAAAAAAAAAAAAAAPC/"
				],
				[
					469,
					1,
					"insert",
					{
						"characters": "other._i"
					},
					"CAAAAN1kAAAAAAAA3mQAAAAAAAAAAAAA3mQAAAAAAADfZAAAAAAAAAAAAADfZAAAAAAAAOBkAAAAAAAAAAAAAOBkAAAAAAAA4WQAAAAAAAAAAAAA4WQAAAAAAADiZAAAAAAAAAAAAADiZAAAAAAAAONkAAAAAAAAAAAAAONkAAAAAAAA5GQAAAAAAAAAAAAA5GQAAAAAAADlZAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3WQAAAAAAADdZAAAAAAAAAAAAAAAAPC/"
				],
				[
					472,
					1,
					"insert",
					{
						"characters": "nst"
					},
					"AwAAAOVkAAAAAAAA5mQAAAAAAAAAAAAA5mQAAAAAAADnZAAAAAAAAAAAAADnZAAAAAAAAOhkAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5WQAAAAAAADlZAAAAAAAAAAAAAAAAPC/"
				],
				[
					473,
					1,
					"insert_completion",
					{
						"completion": "_instructors",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "_instructors"
					},
					"AgAAAONkAAAAAAAA42QAAAAAAAAFAAAAX2luc3TjZAAAAAAAAO9kAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6GQAAAAAAADoZAAAAAAAAAAAAAAAAPC/"
				],
				[
					475,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAO9kAAAAAAAA8GQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA72QAAAAAAADvZAAAAAAAAAAAAAAAAPC/"
				],
				[
					477,
					1,
					"left_delete",
					null,
					"AQAAAO9kAAAAAAAA72QAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAA8GQAAAAAAADwZAAAAAAAAAAAAAAAAPC/"
				],
				[
					479,
					1,
					"insert",
					{
						"characters": " and"
					},
					"BAAAAO9kAAAAAAAA8GQAAAAAAAAAAAAA8GQAAAAAAADxZAAAAAAAAAAAAADxZAAAAAAAAPJkAAAAAAAAAAAAAPJkAAAAAAAA82QAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA72QAAAAAAADvZAAAAAAAAAAAAAAAAPC/"
				],
				[
					480,
					1,
					"insert",
					{
						"characters": " self._"
					},
					"BwAAAPNkAAAAAAAA9GQAAAAAAAAAAAAA9GQAAAAAAAD1ZAAAAAAAAAAAAAD1ZAAAAAAAAPZkAAAAAAAAAAAAAPZkAAAAAAAA92QAAAAAAAAAAAAA92QAAAAAAAD4ZAAAAAAAAAAAAAD4ZAAAAAAAAPlkAAAAAAAAAAAAAPlkAAAAAAAA+mQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA82QAAAAAAADzZAAAAAAAAAAAAAAAAPC/"
				],
				[
					481,
					1,
					"insert",
					{
						"characters": "in"
					},
					"AgAAAPpkAAAAAAAA+2QAAAAAAAAAAAAA+2QAAAAAAAD8ZAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+mQAAAAAAAD6ZAAAAAAAAAAAAAAAAPC/"
				],
				[
					482,
					1,
					"insert_completion",
					{
						"completion": "_instructors",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "_instructors"
					},
					"AgAAAPlkAAAAAAAA+WQAAAAAAAADAAAAX2lu+WQAAAAAAAAFZQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/GQAAAAAAAD8ZAAAAAAAAAAAAAAAAPC/"
				],
				[
					484,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAVlAAAAAAAABmUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABWUAAAAAAAAFZQAAAAAAAAAAAAAAAPC/"
				],
				[
					486,
					1,
					"insert",
					{
						"characters": "\\"
					},
					"AQAAAAZlAAAAAAAAB2UAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABmUAAAAAAAAGZQAAAAAAAAAAAAAAAPC/"
				],
				[
					488,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAAdlAAAAAAAACGUAAAAAAAAAAAAACGUAAAAAAAAQZQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAB2UAAAAAAAAHZQAAAAAAAAAAAAAAAPC/"
				],
				[
					491,
					1,
					"insert",
					{
						"characters": "       "
					},
					"BwAAABBlAAAAAAAAEWUAAAAAAAAAAAAAEWUAAAAAAAASZQAAAAAAAAAAAAASZQAAAAAAABNlAAAAAAAAAAAAABNlAAAAAAAAFGUAAAAAAAAAAAAAFGUAAAAAAAAVZQAAAAAAAAAAAAAVZQAAAAAAABZlAAAAAAAAAAAAABZlAAAAAAAAF2UAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEGUAAAAAAAAQZQAAAAAAAAAAAAAAAPC/"
				],
				[
					493,
					1,
					"insert",
					{
						"characters": "=="
					},
					"AgAAABdlAAAAAAAAGGUAAAAAAAAAAAAAGGUAAAAAAAAZZQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAF2UAAAAAAAAXZQAAAAAAAAAAAAAAAPC/"
				],
				[
					494,
					1,
					"insert",
					{
						"characters": " self"
					},
					"BQAAABllAAAAAAAAGmUAAAAAAAAAAAAAGmUAAAAAAAAbZQAAAAAAAAAAAAAbZQAAAAAAABxlAAAAAAAAAAAAABxlAAAAAAAAHWUAAAAAAAAAAAAAHWUAAAAAAAAeZQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGWUAAAAAAAAZZQAAAAAAAAAAAAAAAPC/"
				],
				[
					495,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAAB5lAAAAAAAAH2UAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHmUAAAAAAAAeZQAAAAAAAAAAAAAAAPC/"
				],
				[
					496,
					5,
					"left_delete",
					null,
					"BQAAAB5lAAAAAAAAHmUAAAAAAAABAAAALh1lAAAAAAAAHWUAAAAAAAABAAAAZhxlAAAAAAAAHGUAAAAAAAABAAAAbBtlAAAAAAAAG2UAAAAAAAABAAAAZRplAAAAAAAAGmUAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAAH2UAAAAAAAAfZQAAAAAAAAAAAAAAAPC/"
				],
				[
					497,
					1,
					"insert",
					{
						"characters": "other."
					},
					"BgAAABplAAAAAAAAG2UAAAAAAAAAAAAAG2UAAAAAAAAcZQAAAAAAAAAAAAAcZQAAAAAAAB1lAAAAAAAAAAAAAB1lAAAAAAAAHmUAAAAAAAAAAAAAHmUAAAAAAAAfZQAAAAAAAAAAAAAfZQAAAAAAACBlAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGmUAAAAAAAAaZQAAAAAAAAAAAAAAAPC/"
				],
				[
					498,
					1,
					"insert",
					{
						"characters": "_"
					},
					"AQAAACBlAAAAAAAAIWUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIGUAAAAAAAAgZQAAAAAAAAAAAAAAAPC/"
				],
				[
					500,
					7,
					"left_delete",
					null,
					"BwAAACBlAAAAAAAAIGUAAAAAAAABAAAAXx9lAAAAAAAAH2UAAAAAAAABAAAALh5lAAAAAAAAHmUAAAAAAAABAAAAch1lAAAAAAAAHWUAAAAAAAABAAAAZRxlAAAAAAAAHGUAAAAAAAABAAAAaBtlAAAAAAAAG2UAAAAAAAABAAAAdBplAAAAAAAAGmUAAAAAAAABAAAAbw",
					"AQAAAAAAAAABAAAAIWUAAAAAAAAhZQAAAAAAAAAAAAAAAPC/"
				],
				[
					504,
					1,
					"insert",
					{
						"characters": "worktout"
					},
					"CQAAAPpkAAAAAAAA+2QAAAAAAAAAAAAA+2QAAAAAAAD7ZAAAAAAAAAsAAABpbnN0cnVjdG9yc/tkAAAAAAAA/GQAAAAAAAAAAAAA/GQAAAAAAAD9ZAAAAAAAAAAAAAD9ZAAAAAAAAP5kAAAAAAAAAAAAAP5kAAAAAAAA/2QAAAAAAAAAAAAA/2QAAAAAAAAAZQAAAAAAAAAAAAAAZQAAAAAAAAFlAAAAAAAAAAAAAAFlAAAAAAAAAmUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABWUAAAAAAAD6ZAAAAAAAAAAAAAAAAPC/"
				],
				[
					506,
					4,
					"left_delete",
					null,
					"BAAAAAFlAAAAAAAAAWUAAAAAAAABAAAAdABlAAAAAAAAAGUAAAAAAAABAAAAdf9kAAAAAAAA/2QAAAAAAAABAAAAb/5kAAAAAAAA/mQAAAAAAAABAAAAdA",
					"AQAAAAAAAAABAAAAAmUAAAAAAAACZQAAAAAAAAAAAAAAAPC/"
				],
				[
					507,
					1,
					"insert",
					{
						"characters": "out"
					},
					"AwAAAP5kAAAAAAAA/2QAAAAAAAAAAAAA/2QAAAAAAAAAZQAAAAAAAAAAAAAAZQAAAAAAAAFlAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/mQAAAAAAAD+ZAAAAAAAAAAAAAAAAPC/"
				],
				[
					509,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAAAFlAAAAAAAAAmUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAWUAAAAAAAABZQAAAAAAAAAAAAAAAPC/"
				],
				[
					519,
					1,
					"insert",
					{
						"characters": "other.work"
					},
					"CgAAABdlAAAAAAAAGGUAAAAAAAAAAAAAGGUAAAAAAAAZZQAAAAAAAAAAAAAZZQAAAAAAABplAAAAAAAAAAAAABplAAAAAAAAG2UAAAAAAAAAAAAAG2UAAAAAAAAcZQAAAAAAAAAAAAAcZQAAAAAAAB1lAAAAAAAAAAAAAB1lAAAAAAAAHmUAAAAAAAAAAAAAHmUAAAAAAAAfZQAAAAAAAAAAAAAfZQAAAAAAACBlAAAAAAAAAAAAACBlAAAAAAAAIWUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAF2UAAAAAAAAXZQAAAAAAAAAAAAAAAPC/"
				],
				[
					522,
					1,
					"insert_completion",
					{
						"completion": "workouts",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "workouts"
					},
					"AgAAAB1lAAAAAAAAHWUAAAAAAAAEAAAAd29yax1lAAAAAAAAJWUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIWUAAAAAAAAhZQAAAAAAAAAAAAAAAPC/"
				],
				[
					524,
					1,
					"insert",
					{
						"characters": " and"
					},
					"BAAAACVlAAAAAAAAJmUAAAAAAAAAAAAAJmUAAAAAAAAnZQAAAAAAAAAAAAAnZQAAAAAAAChlAAAAAAAAAAAAAChlAAAAAAAAKWUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJWUAAAAAAAAlZQAAAAAAAAAAAAAAAPC/"
				],
				[
					525,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACllAAAAAAAAKmUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKWUAAAAAAAApZQAAAAAAAAAAAAAAAPC/"
				],
				[
					530,
					1,
					"insert",
					{
						"characters": "self.name"
					},
					"CQAAAMhkAAAAAAAAyWQAAAAAAAAAAAAAyWQAAAAAAADKZAAAAAAAAAAAAADKZAAAAAAAAMtkAAAAAAAAAAAAAMtkAAAAAAAAzGQAAAAAAAAAAAAAzGQAAAAAAADNZAAAAAAAAAAAAADNZAAAAAAAAM5kAAAAAAAAAAAAAM5kAAAAAAAAz2QAAAAAAAAAAAAAz2QAAAAAAADQZAAAAAAAAAAAAADQZAAAAAAAANFkAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyGQAAAAAAADIZAAAAAAAAAAAAAAAAPC/"
				],
				[
					531,
					1,
					"insert",
					{
						"characters": " =="
					},
					"AwAAANFkAAAAAAAA0mQAAAAAAAAAAAAA0mQAAAAAAADTZAAAAAAAAAAAAADTZAAAAAAAANRkAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0WQAAAAAAADRZAAAAAAAAAAAAAAAAPC/"
				],
				[
					532,
					1,
					"insert",
					{
						"characters": " other.name"
					},
					"CwAAANRkAAAAAAAA1WQAAAAAAAAAAAAA1WQAAAAAAADWZAAAAAAAAAAAAADWZAAAAAAAANdkAAAAAAAAAAAAANdkAAAAAAAA2GQAAAAAAAAAAAAA2GQAAAAAAADZZAAAAAAAAAAAAADZZAAAAAAAANpkAAAAAAAAAAAAANpkAAAAAAAA22QAAAAAAAAAAAAA22QAAAAAAADcZAAAAAAAAAAAAADcZAAAAAAAAN1kAAAAAAAAAAAAAN1kAAAAAAAA3mQAAAAAAAAAAAAA3mQAAAAAAADfZAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1GQAAAAAAADUZAAAAAAAAAAAAAAAAPC/"
				],
				[
					533,
					1,
					"insert",
					{
						"characters": " and"
					},
					"BAAAAN9kAAAAAAAA4GQAAAAAAAAAAAAA4GQAAAAAAADhZAAAAAAAAAAAAADhZAAAAAAAAOJkAAAAAAAAAAAAAOJkAAAAAAAA42QAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA32QAAAAAAADfZAAAAAAAAAAAAAAAAPC/"
				],
				[
					534,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAONkAAAAAAAA5GQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA42QAAAAAAADjZAAAAAAAAAAAAAAAAPC/"
				],
				[
					547,
					1,
					"insert",
					{
						"characters": "\\"
					},
					"AQAAAPlkAAAAAAAA+mQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+WQAAAAAAAD5ZAAAAAAAAAAAAAAAAPC/"
				],
				[
					548,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAPpkAAAAAAAA+2QAAAAAAAAAAAAA+2QAAAAAAAADZQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+mQAAAAAAAD6ZAAAAAAAAAAAAAAAAPC/"
				],
				[
					551,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAANlAAAAAAAABGUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAA2UAAAAAAAADZQAAAAAAAAAAAAAAAPC/"
				],
				[
					553,
					1,
					"insert",
					{
						"characters": "      "
					},
					"BgAAAARlAAAAAAAABWUAAAAAAAAAAAAABWUAAAAAAAAGZQAAAAAAAAAAAAAGZQAAAAAAAAdlAAAAAAAAAAAAAAdlAAAAAAAACGUAAAAAAAAAAAAACGUAAAAAAAAJZQAAAAAAAAAAAAAJZQAAAAAAAAplAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABGUAAAAAAAAEZQAAAAAAAAAAAAAAAPC/"
				],
				[
					558,
					1,
					"insert",
					{
						"characters": "self._"
					},
					"BgAAAFdlAAAAAAAAWGUAAAAAAAAAAAAAWGUAAAAAAABZZQAAAAAAAAAAAABZZQAAAAAAAFplAAAAAAAAAAAAAFplAAAAAAAAW2UAAAAAAAAAAAAAW2UAAAAAAABcZQAAAAAAAAAAAABcZQAAAAAAAF1lAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAV2UAAAAAAABXZQAAAAAAAAAAAAAAAPC/"
				],
				[
					560,
					1,
					"insert",
					{
						"characters": "r"
					},
					"AQAAAF1lAAAAAAAAXmUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXWUAAAAAAABdZQAAAAAAAAAAAAAAAPC/"
				],
				[
					562,
					1,
					"left_delete",
					null,
					"AQAAAF1lAAAAAAAAXWUAAAAAAAABAAAAcg",
					"AQAAAAAAAAABAAAAXmUAAAAAAABeZQAAAAAAAAAAAAAAAPC/"
				],
				[
					564,
					1,
					"insert",
					{
						"characters": "ro"
					},
					"AgAAAF1lAAAAAAAAXmUAAAAAAAAAAAAAXmUAAAAAAABfZQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXWUAAAAAAABdZQAAAAAAAAAAAAAAAPC/"
				],
				[
					565,
					1,
					"insert_completion",
					{
						"completion": "_room_capacities",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "_room_capacities"
					},
					"AgAAAFxlAAAAAAAAXGUAAAAAAAADAAAAX3JvXGUAAAAAAABsZQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAX2UAAAAAAABfZQAAAAAAAAAAAAAAAPC/"
				],
				[
					566,
					1,
					"insert",
					{
						"characters": " =="
					},
					"AwAAAGxlAAAAAAAAbWUAAAAAAAAAAAAAbWUAAAAAAABuZQAAAAAAAAAAAABuZQAAAAAAAG9lAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbGUAAAAAAABsZQAAAAAAAAAAAAAAAPC/"
				],
				[
					567,
					1,
					"insert_completion",
					{
						"completion": "os",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": true,
						"trigger": "os"
					},
					"AQAAAG9lAAAAAAAAcWUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAb2UAAAAAAABvZQAAAAAAAAAAAAAAAPC/"
				],
				[
					568,
					2,
					"left_delete",
					null,
					"AgAAAHBlAAAAAAAAcGUAAAAAAAABAAAAc29lAAAAAAAAb2UAAAAAAAABAAAAbw",
					"AQAAAAAAAAABAAAAcWUAAAAAAABxZQAAAAAAAAAAAAAAAPC/"
				],
				[
					569,
					1,
					"insert",
					{
						"characters": " \\"
					},
					"AgAAAG9lAAAAAAAAcGUAAAAAAAAAAAAAcGUAAAAAAABxZQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAb2UAAAAAAABvZQAAAAAAAAAAAAAAAPC/"
				],
				[
					570,
					1,
					"insert_completion",
					{
						"completion": "os",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": true,
						"trigger": "os"
					},
					"AQAAAHFlAAAAAAAAc2UAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcWUAAAAAAABxZQAAAAAAAAAAAAAAAPC/"
				],
				[
					571,
					1,
					"insert_completion",
					{
						"completion": "OSError",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "OSError"
					},
					"AgAAAHFlAAAAAAAAcWUAAAAAAAACAAAAb3NxZQAAAAAAAHhlAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAc2UAAAAAAABzZQAAAAAAAAAAAAAAAPC/"
				],
				[
					572,
					7,
					"left_delete",
					null,
					"BwAAAHdlAAAAAAAAd2UAAAAAAAABAAAAcnZlAAAAAAAAdmUAAAAAAAABAAAAb3VlAAAAAAAAdWUAAAAAAAABAAAAcnRlAAAAAAAAdGUAAAAAAAABAAAAcnNlAAAAAAAAc2UAAAAAAAABAAAARXJlAAAAAAAAcmUAAAAAAAABAAAAU3FlAAAAAAAAcWUAAAAAAAABAAAATw",
					"AQAAAAAAAAABAAAAeGUAAAAAAAB4ZQAAAAAAAAAAAAAAAPC/"
				],
				[
					573,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAHFlAAAAAAAAcmUAAAAAAAAAAAAAcmUAAAAAAACBZQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcWUAAAAAAABxZQAAAAAAAAAAAAAAAPC/"
				],
				[
					576,
					1,
					"insert",
					{
						"characters": "other._"
					},
					"BwAAAIFlAAAAAAAAgmUAAAAAAAAAAAAAgmUAAAAAAACDZQAAAAAAAAAAAACDZQAAAAAAAIRlAAAAAAAAAAAAAIRlAAAAAAAAhWUAAAAAAAAAAAAAhWUAAAAAAACGZQAAAAAAAAAAAACGZQAAAAAAAIdlAAAAAAAAAAAAAIdlAAAAAAAAiGUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgWUAAAAAAACBZQAAAAAAAAAAAAAAAPC/"
				],
				[
					579,
					1,
					"insert_completion",
					{
						"completion": "_room_capacities",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "_room_capacities"
					},
					"AgAAAIdlAAAAAAAAh2UAAAAAAAABAAAAX4dlAAAAAAAAl2UAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiGUAAAAAAACIZQAAAAAAAAAAAAAAAPC/"
				],
				[
					586,
					2,
					"anaconda_auto_format",
					null,
					"",
					"AQAAAAAAAAABAAAAn2QAAAAAAACfZAAAAAAAAAAAAAAAAPC/"
				],
				[
					597,
					1,
					"insert",
					{
						"characters": "_"
					},
					"AQAAAERlAAAAAAAARWUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARGUAAAAAAABEZQAAAAAAAAAAAAAAAPC/"
				],
				[
					628,
					1,
					"nv_vi_dd",
					{
						"count": 1,
						"mode": "mode_internal_normal",
						"register": "\""
					},
					"AQAAAD1wAAAAAAAAPXAAAAAAAAA0AAAAICAgICAgICA+Pj4gaW5zdHJ1Y3RvcjIuYWRkX2NlcnRpZmljYXRlKCdDYXJkaW8gMScpCg",
					"AQAAAAAAAAABAAAAZnAAAAAAAABmcAAAAAAAAAAAAAAAAPC/"
				],
				[
					630,
					1,
					"nv_vi_dd",
					{
						"count": 1,
						"mode": "mode_internal_normal",
						"register": "\""
					},
					"AQAAAD1wAAAAAAAAPXAAAAAAAAANAAAAICAgICAgICBUcnVlCg",
					"AQAAAAAAAAABAAAARXAAAAAAAABFcAAAAAAAAAAAAAAAAPC/"
				],
				[
					632,
					1,
					"nv_vi_dd",
					{
						"count": 1,
						"mode": "mode_internal_normal",
						"register": "\""
					},
					"AQAAAD1wAAAAAAAAPXAAAAAAAAAnAAAAICAgICAgICA+Pj4gaW5zdHJ1Y3RvcjEgPT0gaW5zdHJ1Y3RvcjIK",
					"AQAAAAAAAAABAAAARXAAAAAAAABFcAAAAAAAAAAAAAAAAPC/"
				],
				[
					634,
					1,
					"nv_vi_dd",
					{
						"count": 1,
						"mode": "mode_internal_normal",
						"register": "\""
					},
					"AQAAAD1wAAAAAAAAPXAAAAAAAAANAAAAICAgICAgICBUcnVlCg",
					"AQAAAAAAAAABAAAARXAAAAAAAABFcAAAAAAAAAAAAAAAAPC/"
				],
				[
					636,
					1,
					"nv_vi_dd",
					{
						"count": 1,
						"mode": "mode_internal_normal",
						"register": "\""
					},
					"AQAAAD1wAAAAAAAAPXAAAAAAAAAzAAAAICAgICAgICA+Pj4gaW5zdHJ1Y3RvcjMgPSBJbnN0cnVjdG9yKDEsICJBbnRob255IikK",
					"AQAAAAAAAAABAAAARXAAAAAAAABFcAAAAAAAAAAAAAAAAPC/"
				],
				[
					638,
					1,
					"nv_vi_dd",
					{
						"count": 1,
						"mode": "mode_internal_normal",
						"register": "\""
					},
					"AQAAAD1wAAAAAAAAPXAAAAAAAAA9AAAAICAgICAgICA+Pj4gaW5zdHJ1Y3RvcjMuYWRkX2NlcnRpZmljYXRlKCdTdHJlbmd0aCBUcmFpbmluZycpCg",
					"AQAAAAAAAAABAAAARXAAAAAAAABFcAAAAAAAAAAAAAAAAPC/"
				],
				[
					640,
					1,
					"nv_vi_dd",
					{
						"count": 1,
						"mode": "mode_internal_normal",
						"register": "\""
					},
					"AQAAAD1wAAAAAAAAPXAAAAAAAAANAAAAICAgICAgICBUcnVlCg",
					"AQAAAAAAAAABAAAARXAAAAAAAABFcAAAAAAAAAAAAAAAAPC/"
				],
				[
					652,
					1,
					"nv_vi_paste",
					{
						"before_cursor": false,
						"count": 1,
						"mode": "mode_internal_normal",
						"register": "\""
					},
					"AQAAAD1wAAAAAAAAcHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAO3AAAAAAAAA7cAAAAAAAAAAAAAAAAPC/"
				],
				[
					659,
					1,
					"nv_vi_r",
					{
						"char": "3",
						"count": 1,
						"mode": "mode_internal_normal",
						"register": "\""
					},
					"AQAAAFNwAAAAAAAAVHAAAAAAAAABAAAAMg",
					"AQAAAAAAAAABAAAAU3AAAAAAAABTcAAAAAAAAAAAAAAAAPC/"
				],
				[
					663,
					1,
					"nv_vi_r",
					{
						"char": "2",
						"count": 1,
						"mode": "mode_internal_normal",
						"register": "\""
					},
					"AQAAAGJwAAAAAAAAY3AAAAAAAAABAAAAMQ",
					"AQAAAAAAAAABAAAAYnAAAAAAAABicAAAAAAAAAAAAAAAAPC/"
				],
				[
					670,
					1,
					"sequence",
					{
						"commands":
						[
							[
								"nv_vi_c",
								{
									"count": 1,
									"mode": "mode_internal_normal",
									"motion":
									{
										"motion": "nv_vi_w",
										"motion_args":
										{
											"count": 1,
											"mode": "mode_internal_normal"
										}
									},
									"register": "\""
								}
							],
							[
								"insert",
								{
									"characters": "Kevin"
								}
							]
						]
					},
					"BgAAAGZwAAAAAAAAZnAAAAAAAAAHAAAAQW50aG9ueWZwAAAAAAAAZ3AAAAAAAAAAAAAAZ3AAAAAAAABocAAAAAAAAAAAAABocAAAAAAAAGlwAAAAAAAAAAAAAGlwAAAAAAAAanAAAAAAAAAAAAAAanAAAAAAAABrcAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZnAAAAAAAABmcAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "test.py",
			"redo_stack":
			[
				[
					95,
					1,
					"nv_vi_dd",
					{
						"count": 1,
						"mode": "mode_internal_normal",
						"register": "\""
					},
					"AQAAAAAAAAAAAAAABwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					93,
					1,
					"nv_vi_d",
					{
						"count": 1,
						"mode": "mode_visual",
						"register": "\""
					},
					"AQAAAAAAAAAAAAAASAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					79,
					1,
					"anaconda_auto_format",
					null,
					"AQAAAAAAAAAAAAAATgAAAAAAAABPAAAAaW1wb3J0IG51bXB5IGFzIG5wCmltcG9ydCBwZGIKCmEgPSBucC5hcnJheShbMSwgMiwgM10pCnBkYi5zZXRfdHJhY2UoKQpiID0gJzEnCg",
					"AQAAAAAAAAABAAAAOAAAAAAAAAA4AAAAAAAAAAAAAAAAAPC/"
				],
				[
					72,
					1,
					"nv_vi_paste",
					{
						"before_cursor": false,
						"count": 1,
						"mode": "mode_internal_normal",
						"register": "\""
					},
					"AQAAADcAAAAAAAAANwAAAAAAAAAQAAAAcGRiLnNldF90cmFjZSgpCg",
					"AQAAAAAAAAABAAAANwAAAAAAAAA3AAAAAAAAAAAAAAAAAPC/"
				],
				[
					70,
					1,
					"nv_vi_dd",
					{
						"count": 1,
						"mode": "mode_internal_normal",
						"register": "\""
					},
					"AQAAAB8AAAAAAAAALwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHwAAAAAAAAAfAAAAAAAAAAAAAAAAAPC/"
				],
				[
					58,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAEwAAAAAAAAATAAAAAAAAAABAAAAMQ",
					"AQAAAAAAAAABAAAATQAAAAAAAABNAAAAAAAAAAAAAAAAAPC/"
				],
				[
					57,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAEsAAAAAAAAASwAAAAAAAAACAAAAJyc",
					"AQAAAAAAAAABAAAATAAAAAAAAABMAAAAAAAAAAAAAAAAAPC/"
				],
				[
					56,
					1,
					"left_delete",
					null,
					"AQAAAEsAAAAAAAAATAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASwAAAAAAAABLAAAAAAAAAAAAAAAAAPC/"
				],
				[
					55,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAEsAAAAAAAAASwAAAAAAAAABAAAAMQ",
					"AQAAAAAAAAABAAAATAAAAAAAAABMAAAAAAAAAAAAAAAAAPC/"
				],
				[
					53,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEoAAAAAAAAASgAAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAASwAAAAAAAABLAAAAAAAAAAAAAAAAAPC/"
				],
				[
					52,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAEkAAAAAAAAASQAAAAAAAAABAAAAPUgAAAAAAAAASAAAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAASgAAAAAAAABKAAAAAAAAAAAAAAAAAPC/"
				],
				[
					51,
					1,
					"insert",
					{
						"characters": "b"
					},
					"AQAAAEcAAAAAAAAARwAAAAAAAAABAAAAYg",
					"AQAAAAAAAAABAAAASAAAAAAAAABIAAAAAAAAAAAAAAAAAPC/"
				],
				[
					40,
					1,
					"nv_vi_dd",
					{
						"count": 1,
						"mode": "mode_internal_normal",
						"register": "\""
					},
					"AQAAAEcAAAAAAAAAVgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARwAAAAAAAABHAAAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					1,
					"insert_snippet",
					{
						"contents": ""
					},
					"AQAAAC0AAAAAAAAALQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALQAAAAAAAAAtAAAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"sublime_jedi_params_autocomplete",
					null,
					"AgAAAC0AAAAAAAAALQAAAAAAAAABAAAAKSwAAAAAAAAALAAAAAAAAAABAAAAKA",
					"AQAAAAAAAAABAAAALQAAAAAAAAAtAAAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"insert_completion",
					{
						"completion": "set_trace",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "set_trace"
					},
					"AgAAACMAAAAAAAAAIwAAAAAAAAAJAAAAc2V0X3RyYWNlIwAAAAAAAAAmAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALAAAAAAAAAAsAAAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": "db.set"
					},
					"BgAAACUAAAAAAAAAJQAAAAAAAAABAAAAdCQAAAAAAAAAJAAAAAAAAAABAAAAZSMAAAAAAAAAIwAAAAAAAAABAAAAcyIAAAAAAAAAIgAAAAAAAAABAAAALiEAAAAAAAAAIQAAAAAAAAABAAAAYiAAAAAAAAAAIAAAAAAAAAABAAAAZA",
					"AQAAAAAAAAABAAAAJgAAAAAAAAAmAAAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"left_delete",
					null,
					"AQAAACAAAAAAAAAAIQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIAAAAAAAAAAgAAAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"insert",
					{
						"characters": "pr"
					},
					"AgAAACAAAAAAAAAAIAAAAAAAAAABAAAAch8AAAAAAAAAHwAAAAAAAAABAAAAcA",
					"AQAAAAAAAAABAAAAIQAAAAAAAAAhAAAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"left_delete",
					null,
					"AgAAAB8AAAAAAAAAIAAAAAAAAAAAAAAAIAAAAAAAAAAhAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHwAAAAAAAAAfAAAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					1,
					"insert_completion",
					{
						"completion": "if",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": true,
						"trigger": "if"
					},
					"AQAAAB8AAAAAAAAAHwAAAAAAAAACAAAAaWY",
					"AQAAAAAAAAABAAAAIQAAAAAAAAAhAAAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAB4AAAAAAAAAHgAAAAAAAAABAAAACh0AAAAAAAAAHQAAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAHwAAAAAAAAAfAAAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					1,
					"insert",
					{
						"characters": " pdb"
					},
					"BAAAABwAAAAAAAAAHAAAAAAAAAABAAAAYhsAAAAAAAAAGwAAAAAAAAABAAAAZBoAAAAAAAAAGgAAAAAAAAABAAAAcBkAAAAAAAAAGQAAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAHQAAAAAAAAAdAAAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": "import"
					},
					"BgAAABgAAAAAAAAAGAAAAAAAAAABAAAAdBcAAAAAAAAAFwAAAAAAAAABAAAAchYAAAAAAAAAFgAAAAAAAAABAAAAbxUAAAAAAAAAFQAAAAAAAAABAAAAcBQAAAAAAAAAFAAAAAAAAAABAAAAbRMAAAAAAAAAEwAAAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAAGQAAAAAAAAAZAAAAAAAAAAAAAAAAAPC/"
				],
				[
					12,
					1,
					"nv_vi_o",
					{
						"count": 1,
						"mode": "mode_internal_normal"
					},
					"AQAAABIAAAAAAAAAEgAAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAEwAAAAAAAAATAAAAAAAAAAAAAAAAAPC/"
				]
			],
			"settings":
			{
				"buffer_size": 58,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		}
	],
	"build_system": "Packages/Python/Python.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"install ",
				"Package Control: Install Package"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"package",
				"Package Control: Install Package"
			],
			[
				"",
				"ANF: Rename File"
			],
			[
				"package re",
				"Package Control: Remove Package"
			],
			[
				"tod",
				"TodoReview: Open Files"
			],
			[
				"to",
				"TodoReview: Open Files"
			],
			[
				"todo",
				"TodoReview: Open Files"
			],
			[
				"rename",
				"Rename File"
			],
			[
				"debg",
				"Debugger: Open"
			],
			[
				"isntall",
				"Debugger: Install Adapters"
			],
			[
				"Package Control: ",
				"Package Control: Discover Packages"
			],
			[
				"ren",
				"Rename File"
			],
			[
				"tpd",
				"TodoReview: Project and Open Files"
			],
			[
				"renam",
				"Rename File"
			],
			[
				"file r",
				"File: Rename"
			],
			[
				"re",
				"SublimeREPL: ECL"
			],
			[
				"sidebar",
				"View: Toggle Open Files in Side Bar"
			],
			[
				"deubgger con",
				"Debugger: Add Configuration"
			],
			[
				"debugger",
				"Debugger: Install Adapters"
			],
			[
				"debugger conf",
				"Debugger: Add Configuration"
			],
			[
				"d",
				"Debugger: Open"
			],
			[
				"color ",
				"UI: Select Color Scheme"
			],
			[
				"select",
				"UI: Select Theme"
			],
			[
				"package ",
				"Package Control: List Packages"
			],
			[
				"select ",
				"UI: Select Theme"
			],
			[
				"select them",
				"UI: Select Theme"
			],
			[
				"pack",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 160.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/wangantony/Downloads/CSC148-Winter-2023",
		"/Users/wangantony/Downloads/CSC148-Winter-2023/assignments",
		"/Users/wangantony/Downloads/CSC148-Winter-2023/assignments/a0",
		"/Users/wangantony/Downloads/CSC148-Winter-2023/preps"
	],
	"file_history":
	[
		"/Users/wangantony/Downloads/CSC148-Winter-2023/preps/prep4/prep4_starter_tests.py",
		"/Users/wangantony/Downloads/CSC148-Winter-2023/preps/prep4/prep4.py",
		"/Users/wangantony/Downloads/CSC148-Winter-2023/test.py",
		"/Users/wangantony/Library/Application Support/Sublime Text/Packages/User/Anaconda.sublime-settings",
		"/Users/wangantony/Downloads/CSC148-Winter-2023/assignments/a0/gym.py",
		"/Users/wangantony/Downloads/CSC148-Winter-2023/preps/prep4/adts.py",
		"/Users/wangantony/Downloads/CSC148-Winter-2023/assignments/a0/gym_sample_tests.py",
		"/Users/wangantony/Downloads/CSC148-Winter-2023/assignments/a0/design_recipes/course.py",
		"/Users/wangantony/Downloads/CSC148-Winter-2023/assignments/a0/athletic-centre.yaml",
		"/Users/wangantony/Library/Application Support/Sublime Text/Packages/Python Breakpoints/PythonBreakpoints.sublime-settings",
		"/Users/wangantony/Downloads/CSC148-Winter-2023/CSC148.sublime-project",
		"/Users/wangantony/Library/Application Support/Sublime Text/Packages/User/PythonBreakpoints.sublime-settings",
		"/Users/wangantony/Downloads/CSC148-Winter-2023/preps/prep2/prep2.py",
		"/Users/wangantony/Downloads/CSC148-Winter-2023/preps/prep2/prep2_starter_tests.py",
		"/Users/wangantony/Library/Application Support/Sublime Text/Packages/User/DashDoc.sublime-settings",
		"/Users/wangantony/Downloads/CSC148-Winter-2023/preps/prep3/prep3_starter_tests.py",
		"/Users/wangantony/Downloads/CSC148-Winter-2023/lectures/week3/super_duper_manager.py \u000e.gitFinderDeleted",
		"/Users/wangantony/Downloads/CSC148-Winter-2023/lectures/week3/super_duper_manager.py",
		"/Users/wangantony/Downloads/CSC148-Winter-2023/preps/prep3/prep3.py",
		"/Users/wangantony/Downloads/CSC148-Winter-2023/README.md",
		"/Users/wangantony/Downloads/148/test.py",
		"/Users/wangantony/Downloads/148/preps/prep3/prep3_starter_tests copy.py",
		"/Users/wangantony/Library/Application Support/Sublime Text/Packages/Default/Default (OSX).sublime-keymap",
		"/Users/wangantony/Downloads/148/test2.py",
		"/Users/wangantony/Downloads/148/preps/prep2/prep2_starter_tests.py",
		"/Users/wangantony/Downloads/148/test3.py",
		"/Users/wangantony/Downloads/148/test1.py",
		"/Users/wangantony/Downloads/148/preps/prep3/prep3_starter_tests.py",
		"/Users/wangantony/Downloads/148/labs/lab2/player.py",
		"/Users/wangantony/Downloads/148/preps/prep3/prep3 copy.py",
		"/Users/wangantony/Downloads/148/preps/prep3/prep3.py",
		"/Users/wangantony/Downloads/148/solution.py",
		"/Users/wangantony/Downloads/148/a19-solution.py",
		"/Users/wangantony/Downloads/148/Final Exam/test3.py",
		"/Users/wangantony/Library/Application Support/Sublime Text/Packages/User/AdvancedNewFile.sublime-settings",
		"/Users/wangantony/Library/Application Support/Sublime Text/Packages/User/Default (OSX).sublime-keymap",
		"/Users/wangantony/Library/Mobile Documents/com~apple~CloudDocs/custom-table.css",
		"/Users/wangantony/Downloads/148/test_.py",
		"/Users/wangantony/Downloads/148/labs/lab1/names.txt",
		"/Users/wangantony/Downloads/CSC148 Preview/untitled.sublime-project",
		"/Users/wangantony/Downloads/148/CSC148.sublime-project",
		"/Users/wangantony/Downloads/148/preps/prep1/prep2_starter_tests.py",
		"/Users/wangantony/Library/Application Support/Sublime Text/Packages/SideBarEnhancements/Side Bar.sublime-settings"
	],
	"find":
	{
		"height": 42.0
	},
	"find_in_files":
	{
		"height": 196.0,
		"where_history":
		[
			"<current file>",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"foo",
			"var",
			"_item",
			"add_certificate",
			"get_certificates",
			"get_certificate",
			"add_certificate",
			"round",
			"pay",
			"total_salary",
			"_total_salary",
			"total_pay",
			"_total_salary",
			"__total_salary",
			"total_salary"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"var",
			"foo",
			"_items",
			"._items",
			"_items",
			"get_certificates",
			"_total_salary",
			"total_salary",
			"_total_salary"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "assignments/a0/gym_sample_tests.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10761,
						"regions":
						{
						},
						"selection":
						[
							[
								2568,
								2568
							]
						],
						"settings":
						{
							"git_gutter_is_enabled": true,
							"show_definitions": false,
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2299.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "assignments/a0/gym.py",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 33329,
						"regions":
						{
						},
						"selection":
						[
							[
								28565,
								28565
							]
						],
						"settings":
						{
							"_nv_visual_sel_mode": "mode_visual",
							"git_gutter_is_enabled": true,
							"show_definitions": false,
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 23710.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "test.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 58,
						"regions":
						{
						},
						"selection":
						[
							[
								58,
								58
							]
						],
						"settings":
						{
							"_nv_visual_sel_mode": "mode_visual",
							"git_gutter_is_enabled": true,
							"highlight_line": false,
							"show_definitions": false,
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 42.0
	},
	"input":
	{
		"height": 80.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.Debugger":
	{
		"height": 582.0
	},
	"output.Debugger Console":
	{
		"height": 156.0
	},
	"output.Debugger Terminal":
	{
		"height": 669.0
	},
	"output.Debugger Terminal(1)":
	{
		"height": 504.0
	},
	"output.exec":
	{
		"height": 581.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/Python/Python.sublime-build",
	"project": "CSC148.sublime-project",
	"replace":
	{
		"height": 80.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"test2",
				"test2.py"
			],
			[
				"test1",
				"test1.py"
			],
			[
				"",
				"labs/lab1/names.txt"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 190.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 592.0
	},
	"selected_group": 0,
	"settings":
	{
		"_vintageous_last_buff_search_command": "nv_vi_octothorp",
		"_vintageous_last_buff_search_pattern": "import",
		"_vintageous_last_char_search_character": "s",
		"_vintageous_last_char_search_command": "vi_f",
		"_vintageous_reset_during_init": true
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 257.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
