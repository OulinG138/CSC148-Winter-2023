{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"ite",
				"items_in_range"
			],
			[
				"item",
				"items_in_range"
			],
			[
				"is",
				"is_displayed_tree_leaf"
			],
			[
				"get",
				"get_rectangles"
			],
			[
				"su",
				"subtrees_data_size"
			],
			[
				"_get",
				"_get_path_string_helper"
			],
			[
				"path",
				"get_path_string"
			],
			[
				"compl",
				"completed_user_name"
			],
			[
				"com",
				"completed_user_name"
			],
			[
				"de",
				"description"
			],
			[
				"Chec",
				"ChecklistItem"
			],
			[
				"_",
				"_complete_item_dict"
			],
			[
				"tota",
				"total_items_checked"
			],
			[
				"desc",
				"descriptions"
			],
			[
				"__",
				"__contains__"
			],
			[
				"iss",
				"issuperset"
			],
			[
				"instr",
				"instructor2"
			],
			[
				"work",
				"workouts"
			],
			[
				"workt",
				"workout_class"
			],
			[
				"room",
				"_room_capacities"
			],
			[
				"U",
				"UnreliableMagicCarpet"
			],
			[
				"hour",
				"hours_per_month"
			],
			[
				"max",
				"max_size"
			],
			[
				"to",
				"total_s"
			],
			[
				"a",
				"ascii_lowercase"
			],
			[
				"tot",
				"total_salary"
			]
		]
	},
	"buffers":
	[
		{
			"file": "assignments/a2/tm_trees.py",
			"settings":
			{
				"buffer_size": 35812,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					21,
					1,
					"sequence",
					{
						"commands":
						[
							[
								"nv_vi_big_c",
								{
									"count": 1,
									"mode": "mode_internal_normal",
									"register": "\""
								}
							],
							[
								"insert",
								{
									"characters": "d"
								}
							]
						]
					},
					"AgAAAKQoAAAAAAAApCgAAAAAAAABAAAAMKQoAAAAAAAApSgAAAAAAAAAAAAA",
					"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACkKAAAAAAAAKQoAAAAAAAAAAAAAAAA8L8"
				],
				[
					29,
					1,
					"sequence",
					{
						"commands":
						[
							[
								"nv_vi_a",
								{
									"count": 1,
									"mode": "mode_internal_normal"
								}
							],
							[
								"insert",
								{
									"characters": "ata-I"
								}
							],
							[
								"left_delete",
								null
							],
							[
								"left_delete",
								null
							],
							[
								"insert",
								{
									"characters": "_size"
								}
							]
						]
					},
					"DAAAAKUoAAAAAAAApigAAAAAAAAAAAAApigAAAAAAACnKAAAAAAAAAAAAACnKAAAAAAAAKgoAAAAAAAAAAAAAKgoAAAAAAAAqSgAAAAAAAAAAAAAqSgAAAAAAACqKAAAAAAAAAAAAACpKAAAAAAAAKkoAAAAAAAAAQAAAEmoKAAAAAAAAKgoAAAAAAAAAQAAAC2oKAAAAAAAAKkoAAAAAAAAAAAAAKkoAAAAAAAAqigAAAAAAAAAAAAAqigAAAAAAACrKAAAAAAAAAAAAACrKAAAAAAAAKwoAAAAAAAAAAAAAKwoAAAAAAAArSgAAAAAAAAAAAAA",
					"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACkKAAAAAAAAKQoAAAAAAAAAAAAAAAA8L8"
				],
				[
					37,
					1,
					"nv_vi_d",
					{
						"count": 1,
						"mode": "mode_internal_normal",
						"motion":
						{
							"motion": "nv_vi_w",
							"motion_args":
							{
								"count": 1,
								"mode": "mode_internal_normal"
							}
						},
						"register": "\""
					},
					"AQAAAEspAAAAAAAASykAAAAAAAAKAAAAZGF0YV9zaXplIA",
					"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABLKQAAAAAAAEspAAAAAAAAAAAAAAAA8L8"
				],
				[
					39,
					1,
					"nv_vi_x",
					{
						"count": 1,
						"mode": "mode_internal_normal",
						"register": "\""
					},
					"AQAAAEspAAAAAAAASykAAAAAAAABAAAAKw",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEspAAAAAAAASykAAAAAAAAAAAAAAADwvw"
				],
				[
					41,
					1,
					"nv_vi_x",
					{
						"count": 1,
						"mode": "mode_internal_normal",
						"register": "\""
					},
					"AQAAAEspAAAAAAAASykAAAAAAAABAAAAIA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEspAAAAAAAASykAAAAAAAAAAAAAAADwvw"
				],
				[
					19,
					1,
					"nv_vi_d",
					{
						"count": 1,
						"mode": "mode_visual",
						"register": "\""
					},
					"AQAAAMI5AAAAAAAAwjkAAAAAAADjBwAAeCwgeSwgd2lkdGgsIGhlaWdodCA9IHJlY3QKICAgICAgICBzZWxmLnJlY3QgPSByZWN0CiAgICAgICAgaSA9IDAKICAgICAgICBzdGFydF92ZXIgPSB4CiAgICAgICAgc3RhcnRfaG9yID0geQogICAgICAgIHN1bV93aWR0aCA9IDAKICAgICAgICBzdW1faGVpZ2h0ID0gMAogICAgICAgIGZvciBzdWJ0cmVlIGluIHNlbGYuX3N1YnRyZWVzOgogICAgICAgICAgICBpZiB3aWR0aCA+IGhlaWdodCBhbmQgc2VsZi5kYXRhX3NpemUgPiAwIGFuZFwKICAgICAgICAgICAgICAgICAgICBpICE9IGxlbihzZWxmLl9zdWJ0cmVlcykgLSAxOgogICAgICAgICAgICAgICAgaWYgc3VidHJlZS5kYXRhX3NpemUgPiAwOgogICAgICAgICAgICAgICAgICAgIHdpZCA9IG1hdGguZmxvb3IoKHN1YnRyZWUuZGF0YV9zaXplIC8gc2VsZi5kYXRhX3NpemUpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqIHdpZHRoKQogICAgICAgICAgICAgICAgICAgIHN1YnRyZWUudXBkYXRlX3JlY3RhbmdsZXMoKHN0YXJ0X3ZlciwgeSwgd2lkLCBoZWlnaHQpKQogICAgICAgICAgICAgICAgICAgIHN0YXJ0X3ZlciArPSB3aWQKICAgICAgICAgICAgICAgICAgICBzdW1fd2lkdGggKz0gd2lkCiAgICAgICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgICAgIHN1YnRyZWUudXBkYXRlX3JlY3RhbmdsZXMoKHN0YXJ0X3ZlciwgeSwgMCwgMCkpCiAgICAgICAgICAgICAgICBpICs9IDEKICAgICAgICAgICAgZWxpZiB3aWR0aCA+IGhlaWdodCBhbmQgc2VsZi5kYXRhX3NpemUgPiAwIGFuZFwKICAgICAgICAgICAgICAgICAgICBpID09IGxlbihzZWxmLl9zdWJ0cmVlcykgLSAxOgogICAgICAgICAgICAgICAgaWYgc3VidHJlZS5kYXRhX3NpemUgPiAwOgogICAgICAgICAgICAgICAgICAgIHN1YnRyZWUudXBkYXRlX3JlY3RhbmdsZXMoKHN0YXJ0X3ZlciwgeSwgd2lkdGggLSBzdW1fd2lkdGgsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0KSkKICAgICAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICAgICAgc3VidHJlZS51cGRhdGVfcmVjdGFuZ2xlcygoc3RhcnRfdmVyLCB5LCAwLCAwKSkKICAgICAgICAgICAgZWxpZiBoZWlnaHQgPj0gd2lkdGggYW5kIHNlbGYuZGF0YV9zaXplID4gMCBhbmRcCiAgICAgICAgICAgICAgICAgICAgaSAhPSBsZW4oc2VsZi5fc3VidHJlZXMpIC0gMToKICAgICAgICAgICAgICAgIGlmIHN1YnRyZWUuZGF0YV9zaXplID4gMDoKICAgICAgICAgICAgICAgICAgICBoaWcgPSBtYXRoLmZsb29yKChzdWJ0cmVlLmRhdGFfc2l6ZSAvIHNlbGYuZGF0YV9zaXplKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKiBoZWlnaHQpCiAgICAgICAgICAgICAgICAgICAgc3VidHJlZS51cGRhdGVfcmVjdGFuZ2xlcygoeCwgc3RhcnRfaG9yLCB3aWR0aCwgaGlnKSkKICAgICAgICAgICAgICAgICAgICBzdGFydF9ob3IgKz0gaGlnCiAgICAgICAgICAgICAgICAgICAgc3VtX2hlaWdodCArPSBoaWcKICAgICAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICAgICAgc3VidHJlZS51cGRhdGVfcmVjdGFuZ2xlcygoeCwgc3RhcnRfaG9yLCAwLCAwKSkKICAgICAgICAgICAgICAgIGkgKz0gMQogICAgICAgICAgICBlbGlmIGhlaWdodCA+PSB3aWR0aCBhbmQgc2VsZi5kYXRhX3NpemUgPiAwIGFuZFwKICAgICAgICAgICAgICAgICAgICBpID09IGxlbihzZWxmLl9zdWJ0cmVlcykgLSAxOgogICAgICAgICAgICAgICAgaWYgc3VidHJlZS5kYXRhX3NpemUgPiAwOgogICAgICAgICAgICAgICAgICAgIHN1YnRyZWUudXBkYXRlX3JlY3RhbmdsZXMoKHgsIHN0YXJ0X2hvciwgd2lkdGgsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0IC0gc3VtX2hlaWdodCkpCiAgICAgICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgICAgIHN1YnRyZWUudXBkYXRlX3JlY3RhbmdsZXMoKHgsIHN0YXJ0X2hvciwgMCwgMCkp",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKVBAAAAAAAAwjkAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "preps/prep11/prep11.py",
			"settings":
			{
				"buffer_size": 6770,
				"line_ending": "Windows"
			}
		},
		{
			"file": "assignments/a2/tm_trees_referece4.py",
			"settings":
			{
				"buffer_size": 13602,
				"line_ending": "Unix"
			}
		},
		{
			"file": "assignments/a2/tm_trees_referece3.py",
			"settings":
			{
				"buffer_size": 14554,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "assignments/a2/tm_trees_referece2.py",
			"settings":
			{
				"buffer_size": 14493,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					9,
					1,
					"nv_vi_d",
					{
						"count": 1,
						"mode": "mode_visual",
						"register": "\""
					},
					"",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAADaOAAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					1,
					"paste",
					null,
					"AQAAAAAAAAAAAAAAnTgAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "assignments/a2/tm_trees_reference.py",
			"settings":
			{
				"buffer_size": 16822,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "\"\"\"Prep 11 Synthesize: Recursive Sorting Algorithms\n\n=== CSC148 Summer 2019 ===\nDepartment of Computer Science,\nUniversity of Toronto\n\n=== Module Description ===\nThis file includes the recursive sorting algorithms from this week's prep\nreadings, and two short programming exercises to extend your learning about\nthese algorithms in different ways.\n\"\"\"\nfrom typing import Any, List, Tuple\n\n\n################################################################################\n# Mergesort and Quicksort\n################################################################################\ndef mergesort(lst: List) -> List:\n    \"\"\"Return a sorted list with the same elements as <lst>.\n\n    This is a *non-mutating* version of mergesort; it does not mutate the\n    input list.\n\n    >>> mergesort([10, 2, 5, -6, 17, 10])\n    [-6, 2, 5, 10, 10, 17]\n    \"\"\"\n    if len(lst) < 2:\n        return lst[:]\n    else:\n        # Divide the list into two parts, and sort them recursively.\n        mid = len(lst) // 2\n        left_sorted = mergesort(lst[:mid])\n        right_sorted = mergesort(lst[mid:])\n\n        # Merge the two sorted halves. Need a helper here!\n        return _merge(left_sorted, right_sorted)\n\n\ndef _merge(lst1: List, lst2: List) -> List:\n    \"\"\"Return a sorted list with the elements in <lst1> and <lst2>.\n\n    Precondition: <lst1> and <lst2> are sorted.\n    \"\"\"\n    index1 = 0\n    index2 = 0\n    merged = []\n    while index1 < len(lst1) and index2 < len(lst2):\n        if lst1[index1] <= lst2[index2]:\n            merged.append(lst1[index1])\n            index1 += 1\n        else:\n            merged.append(lst2[index2])\n            index2 += 1\n\n    # Now either index1 == len(lst1) or index2 == len(lst2).\n    assert index1 == len(lst1) or index2 == len(lst2)\n    # The remaining elements of the other list\n    # can all be added to the end of <merged>.\n    # Note that at most ONE of lst1[index1:] and lst2[index2:]\n    # is non-empty, but to keep the code simple, we include both.\n    return merged + lst1[index1:] + lst2[index2:]\n\n\ndef quicksort(lst: List) -> List:\n    \"\"\"Return a sorted list with the same elements as <lst>.\n\n    This is a *non-mutating* version of quicksort; it does not mutate the\n    input list.\n\n    >>> quicksort([10, 2, 5, -6, 17, 10])\n    [-6, 2, 5, 10, 10, 17]\n    \"\"\"\n    if len(lst) < 2:\n        return lst[:]\n    else:\n        # Pick pivot to be first element.\n        # Could make lots of other choices here (e.g., last, random)\n        pivot = lst[0]\n\n        # Partition rest of list into two halves\n        smaller, bigger = _partition(lst[1:], pivot)\n\n        # Recurse on each partition\n        smaller_sorted = quicksort(smaller)\n        bigger_sorted = quicksort(bigger)\n\n        # Return! Notice the simple combining step\n        return smaller_sorted + [pivot] + bigger_sorted\n\n\ndef _partition(lst: List, pivot: Any) -> Tuple[List, List]:\n    \"\"\"Return a partition of <lst> with the chosen pivot.\n\n    Return two lists, where the first contains the items in <lst>\n    that are <= pivot, and the second is the items in <lst> that are > pivot.\n    \"\"\"\n    smaller = []\n    bigger = []\n\n    for item in lst:\n        if item <= pivot:\n            smaller.append(item)\n        else:\n            bigger.append(item)\n\n    return smaller, bigger\n\n\n################################################################################\n# Synthesize exercises\n################################################################################\n# TODO: Complete the implementation of this function!\ndef mergesort3(lst: List) -> List:\n    \"\"\"Return a sorted version of <lst> using three-way mergesort.\n\n    Three-way mergesort is similar to mergesort, except:\n        - it divides the input list into *three* lists of (almost) equal length\n        - the main helper merge3 takes in *three* sorted lists, and returns\n          a sorted list that contains elements from all of its inputs.\n\n    HINT: depending on your impementation, you might need another base case\n    when len(lst) == 2 to avoid an infinite recursion error.\n\n    >>> mergesort3([10, 2, 5, -6, 17, 10])\n    [-6, 2, 5, 10, 10, 17]\n\n    >>> mergesort3([1,2])\n    [1, 2]\n    \"\"\"\n    if len(lst) < 2:\n        return lst[:]\n    elif len(lst) == 2:\n        return mergesort(lst)\n    else:\n        split = len(lst) // 3\n        split2 = split * 2\n        left_sorted = mergesort3(lst[:split])\n        middle_sorted = mergesort3(lst[split:split2])\n        right_sorted = mergesort3(lst[split2:])\n    return merge3(left_sorted, middle_sorted, right_sorted)\n\n\n\n# TODO: Implement this function!\n# Note that we've made it public because we'll be testing it directly.\ndef merge3(lst1: List, lst2: List, lst3: List) -> List:\n    \"\"\"Return a sorted list with the elements in the given input lists.\n\n    Precondition: <lst1>, <lst2>, and <lst3> are all sorted.\n\n    This *must* be implemented using the same approach as _merge; in particular,\n    it should use indexes to keep track of where you are in each list.\n    This will keep your implementation efficient, which we will be checking for.\n\n    Since this involves some detailed work with indexes, we recommend splitting\n    up your code into one or more helpers to divide up (and test!) each part\n    separately.\n    \"\"\"\n    index1 = 0\n    index2 = 0\n    index3 = 0\n    merged = []\n    while index1 < len(lst1) and index2 < len(lst2) and index3 < len(lst3):\n        if lst1[index1] <= lst2[index2] and lst1[index1] <= lst3[index3]:\n            merged.append(lst1[index1])\n            index1 += 1\n        elif lst2[index2] <= lst1[index1] and lst2[index2] <= lst3[index3]:\n            merged.append(lst2[index2])\n            index2 += 1\n        else:\n            merged.append(lst3[index3])\n            index3 += 1\n\n    assert index1 == len(lst1) or index2 == len(lst2) or index3 == len(lst3)\n    # The remaining elements of the other list\n    # can all be added to the end of <merged>.\n    # Note that at most ONE of lst1[index1:] and lst2[index2:]\n    # is non-empty, but to keep the code simple, we include both.\n    return merged + lst1[index1:] + lst2[index2:] + lst3[index3:]\n\n\n# TODO: Implement this function\ndef kth_smallest(lst: List, k: int) -> Any:\n    \"\"\"Return the <k>-th smallest element in <lst>.\n\n    Raise IndexError if k < 0 or k >= len(lst).\n    Note: for convenience, k counts from 0, so kth_smallest(lst, 0) == min(lst).\n\n    Precondition: <lst> does not contain duplicates.\n\n    >>> kth_smallest([10, 20, -4, 3], 0)\n    -4\n    >>> kth_smallest([10, 20, -4, 3], 2)\n    10\n    \"\"\"\n    # You may *not* sort the list here (this is easy but not very efficient).\n    # Instead, use the following approach, based on quicksort:\n    #   1. partition the list based on a chosen pivot:\n    #       smaller, bigger = partition(...)\n    #   2. Compare len(smaller) against k, and use the result to decide which\n    #      list to recurse on (if any). As in your BST prep, you should only\n    #      make one recursive call into either <smaller> or <bigger>, not both!\n    if k >= len(lst) or k < 0:\n        raise IndexError\n    p = lst[0]\n    smaller, bigger = _partition(lst[1:], p)\n    if len(smaller) > k:\n        return kth_smallest(smaller, k)\n    elif k == len(smaller):\n        return p\n    else:\n        return kth_smallest(bigger, k - len(smaller) - 1)\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()\n\n    import python_ta\n    python_ta.check_all()",
			"file": "preps/prep11/prep11 copy 2.py",
			"file_size": 3256,
			"file_write_time": 133244275382491267,
			"settings":
			{
				"buffer_size": 7412,
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					7,
					1,
					"paste",
					null,
					"AgAAAAAAAAAAAAAA9BwAAAAAAAAAAAAA9BwAAAAAAAD0HAAAAAAAAEsMAABpbXBvcnQgcHJlcDExIGFzIHAxMQppbXBvcnQgdW5pdHRlc3QKaW1wb3J0IHJhbmRvbQppbXBvcnQgdGltZWl0CgpjbGFzcyBUZXN0TWVyZ2VTb3J0KHVuaXR0ZXN0LlRlc3RDYXNlKToKICAgIGRlZiB0ZXN0X2FzY2VuZGluZyhzZWxmKToKICAgICAgICBhcmcgPSBbMSwgMiwgMywgNCwgNSwgNl0KICAgICAgICBleHAgPSBbMSwgMiwgMywgNCwgNSwgNl0KICAgICAgICBhY3R1YWwgPSBwMTEubWVyZ2Vzb3J0MyhhcmcpCiAgICAgICAgc2VsZi5hc3NlcnRFcXVhbChhY3R1YWwsIGV4cCkKCiAgICBkZWYgdGVzdF9kZXNjZW5kaW5nKHNlbGYpOgogICAgICAgIGFyZyA9IFs2LCA1LCA0LCAzLCAyLCAxXQogICAgICAgIGV4cCA9IFsxLCAyLCAzLCA0LCA1LCA2XQogICAgICAgIGFjdCA9IHAxMS5tZXJnZXNvcnQzKGFyZykKICAgICAgICBzZWxmLmFzc2VydEVxdWFsKGFjdCwgZXhwKQoKICAgIGRlZiB0ZXN0X2Jhc2VfY2FzZTEoc2VsZik6CiAgICAgICAgYXJnID0gWzFdCiAgICAgICAgZXhwID0gWzFdCiAgICAgICAgYWN0ID0gcDExLm1lcmdlc29ydDMoYXJnKQogICAgICAgIHNlbGYuYXNzZXJ0RXF1YWwoYWN0LCBleHApCgogICAgZGVmIHRlc3RfYmFzZV9jYXNlMihzZWxmKToKICAgICAgICBhcmcgPSBbMiwgMV0KICAgICAgICBleHAgPSBbMSwgMl0KICAgICAgICBhY3QgPSBwMTEubWVyZ2Vzb3J0MyhhcmcpCiAgICAgICAgc2VsZi5hc3NlcnRFcXVhbChhY3QsIGV4cCkKCiAgICBkZWYgdGVzdF9hdmVyYWdlKHNlbGYpOgogICAgICAgIGFyZyA9IFsyLCAxLCA0LCAzLCA2LCA1XQogICAgICAgIGV4cCA9IHNvcnRlZChhcmcpCiAgICAgICAgYWN0ID0gcDExLm1lcmdlc29ydDMoYXJnKQogICAgICAgIHNlbGYuYXNzZXJ0RXF1YWwoYWN0LCBleHApCgogICAgZGVmIHRlc3RfcmFuZG9tKHNlbGYpOgogICAgICAgIGFyZyA9IHJhbmRvbS5zYW1wbGUoW2sgZm9yIGsgaW4gcmFuZ2UoMTApXSwgNSkKICAgICAgICBleHAgPSBzb3J0ZWQoYXJnKQogICAgICAgIGFjdCA9IHAxMS5tZXJnZXNvcnQzKGFyZykKICAgICAgICBzZWxmLmFzc2VydEVxdWFsKGFjdCwgZXhwKQoKICAgIGRlZiB0ZXN0X3JhbmRvbV9kdXBsaWNhdGUoc2VsZik6CiAgICAgICAgYXJnID0gW3JhbmRvbS5yYW5kaW50KDEsMTApIGZvciBrIGluIHJhbmdlKDExKV0KICAgICAgICBleHAgPSBzb3J0ZWQoYXJnKQogICAgICAgIGFjdCA9IHAxMS5tZXJnZXNvcnQzKGFyZykKICAgICAgICBzZWxmLmFzc2VydEVxdWFsKGFjdCwgZXhwKQoKICAgIGRlZiB0ZXN0X3dvcnN0X2Nhc2VfdGltZShzZWxmKToKICAgICAgICBhcmcgPSBbaSBmb3IgaSBpbiByYW5nZSgxMDAwMCwgMCwgLTEpXQogICAgICAgIGV4cCA9IHNvcnRlZChhcmcpCiAgICAgICAgc3RhcnQgPSB0aW1laXQuZGVmYXVsdF90aW1lcigpCiAgICAgICAgYWN0ID0gcDExLm1lcmdlc29ydDMoYXJnKQogICAgICAgIGVuZCA9IHRpbWVpdC5kZWZhdWx0X3RpbWVyKCkKICAgICAgICBwcmludCgiRXhlY3V0aW9uIHRpbWU6ICIgKyBzdHIoZW5kIC0gc3RhcnQpKQogICAgICAgIHNlbGYuYXNzZXJ0RXF1YWwoYWN0LCBleHApCiAgICAgICAgc2VsZi5hc3NlcnRFcXVhbChlbmQgLSBzdGFydCA8IDUsIFRydWUsICJZb3Ugc2hvdWxkIG1ha2UgeW91ciBwcm9ncmFtIGZpbmlzaCBpbiA1IHNlY29uZHMiKQoKY2xhc3MgVGVzdEt0aCh1bml0dGVzdC5UZXN0Q2FzZSk6CiAgICBkZWYgdGVzdF9taW4oc2VsZik6CiAgICAgICAgYXJnID0gcmFuZG9tLnNhbXBsZShbayBmb3IgayBpbiByYW5nZSgxMCldLCA3KQogICAgICAgIGV4cCA9IG1pbihhcmcpCiAgICAgICAgYWN0ID0gcDExLmt0aF9zbWFsbGVzdChhcmcsIDApCiAgICAgICAgc2VsZi5hc3NlcnRFcXVhbChhY3QsIGV4cCkKCiAgICBkZWYgdGVzdF9tYXgoc2VsZik6CiAgICAgICAgYXJnID0gcmFuZG9tLnNhbXBsZShbayBmb3IgayBpbiByYW5nZSgxMCldLCA3KQogICAgICAgIGV4cCA9IG1heChhcmcpCiAgICAgICAgYWN0ID0gcDExLmt0aF9zbWFsbGVzdChhcmcsIGxlbihhcmcpLTEpCiAgICAgICAgc2VsZi5hc3NlcnRFcXVhbChhY3QsIGV4cCkKCiAgICBkZWYgdGVzdF9sZWZ0KHNlbGYpOgogICAgICAgIGFyZyA9IHJhbmRvbS5zYW1wbGUoW2sgZm9yIGsgaW4gcmFuZ2UoMTApXSwgNykKICAgICAgICBleHAgPSBzb3J0ZWQoYXJnKVsyXQogICAgICAgIGFjdCA9IHAxMS5rdGhfc21hbGxlc3QoYXJnLCAyKQogICAgICAgIHNlbGYuYXNzZXJ0RXF1YWwoYWN0LCBleHApCgogICAgZGVmIHRlc3RfcGl2b3Qoc2VsZik6CiAgICAgICAgYXJnID0gcmFuZG9tLnNhbXBsZShbayBmb3IgayBpbiByYW5nZSgxMCldLCA3KQogICAgICAgIGV4cCA9IHNvcnRlZChhcmcpWzRdCiAgICAgICAgYWN0ID0gcDExLmt0aF9zbWFsbGVzdChhcmcsIDQpCiAgICAgICAgc2VsZi5hc3NlcnRFcXVhbChhY3QsIGV4cCkKCiAgICBkZWYgdGVzdF9yaWdodChzZWxmKToKICAgICAgICBhcmcgPSByYW5kb20uc2FtcGxlKFtrIGZvciBrIGluIHJhbmdlKDEwKV0sIDcpCiAgICAgICAgZXhwID0gc29ydGVkKGFyZylbNV0KICAgICAgICBhY3QgPSBwMTEua3RoX3NtYWxsZXN0KGFyZywgNSkKICAgICAgICBzZWxmLmFzc2VydEVxdWFsKGFjdCwgZXhwKQoKICAgIGRlZiB0ZXN0X2Vycm9yXzEoc2VsZik6CiAgICAgICAgYXJnID0gcmFuZG9tLnNhbXBsZShbayBmb3IgayBpbiByYW5nZSgxMCldLCA3KQogICAgICAgIGV4cCA9IC0xCiAgICAgICAgdHJ5OgogICAgICAgICAgICBhY3QgPSBwMTEua3RoX3NtYWxsZXN0KGFyZywgLTEpCiAgICAgICAgZXhjZXB0IEluZGV4RXJyb3I6CiAgICAgICAgICAgIGFjdCA9IC0xCiAgICAgICAgc2VsZi5hc3NlcnRFcXVhbChhY3QsIGV4cCkKCiAgICBkZWYgdGVzdF9lcnJvcl8yKHNlbGYpOgogICAgICAgIGFyZyA9IHJhbmRvbS5zYW1wbGUoW2sgZm9yIGsgaW4gcmFuZ2UoMTApXSwgNykKICAgICAgICBleHAgPSAtMQogICAgICAgIHRyeToKICAgICAgICAgICAgYWN0ID0gcDExLmt0aF9zbWFsbGVzdChhcmcsIDEwKQogICAgICAgIGV4Y2VwdCBJbmRleEVycm9yOgogICAgICAgICAgICBhY3QgPSAtMQogICAgICAgIHNlbGYuYXNzZXJ0RXF1YWwoYWN0LCBleHApCgoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIHVuaXR0ZXN0Lm1haW4oZXhpdD1GYWxzZSk",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAABLDAAAAAAAAAAAAAAAAPC/"
				]
			]
		}
	],
	"build_system": "Packages/Python/Python.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Anaconda Python Builder",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/SendCode/build_systems/IPython - Source File.sublime-build",
					""
				],
				[
					"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
					""
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/R/R.sublime-build",
					""
				],
				[
					"Packages/SendCode/build_systems/R - Source File.sublime-build",
					""
				],
				[
					"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
					""
				],
				[
					"Packages/User/R-IDE/R-IDE.sublime-build",
					""
				]
			],
			[
				"Packages/User/R-IDE/R-IDE.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"rena",
				"Rename File"
			],
			[
				"r",
				"Rename File"
			],
			[
				"rename",
				"Rename File"
			],
			[
				"R",
				"Build With: R"
			],
			[
				"terminus: op",
				"Terminus: Toggle Panel"
			],
			[
				"terminus: open",
				"Terminus: Open Default Shell in Tab (View)"
			],
			[
				"term",
				"Terminus: Open Default Shell in Tab (View)"
			],
			[
				"pac",
				"Package Control: Install Package"
			],
			[
				"dis",
				"Package Control: Disable Package"
			],
			[
				"package br",
				"Preferences: Browse Packages"
			],
			[
				"pa",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"enalbe",
				"Package Control: Enable Package"
			],
			[
				"enable",
				"Package Control: Enable Package"
			],
			[
				"disable",
				"Package Control: Disable Package"
			],
			[
				"package dis",
				"Package Control: Disable Package"
			],
			[
				"tod",
				"TodoReview: Open Files"
			],
			[
				"package",
				"Package Control: Enable Package"
			],
			[
				"renam",
				"Rename File"
			],
			[
				"install ",
				"Package Control: Install Package"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"",
				"ANF: Rename File"
			],
			[
				"package re",
				"Package Control: Remove Package"
			],
			[
				"to",
				"TodoReview: Open Files"
			],
			[
				"todo",
				"TodoReview: Open Files"
			],
			[
				"debg",
				"Debugger: Open"
			],
			[
				"isntall",
				"Debugger: Install Adapters"
			],
			[
				"Package Control: ",
				"Package Control: Discover Packages"
			],
			[
				"ren",
				"Rename File"
			],
			[
				"tpd",
				"TodoReview: Project and Open Files"
			],
			[
				"file r",
				"File: Rename"
			],
			[
				"re",
				"SublimeREPL: ECL"
			],
			[
				"sidebar",
				"View: Toggle Open Files in Side Bar"
			],
			[
				"deubgger con",
				"Debugger: Add Configuration"
			],
			[
				"debugger",
				"Debugger: Install Adapters"
			],
			[
				"debugger conf",
				"Debugger: Add Configuration"
			],
			[
				"d",
				"Debugger: Open"
			],
			[
				"color ",
				"UI: Select Color Scheme"
			],
			[
				"select",
				"UI: Select Theme"
			],
			[
				"package ",
				"Package Control: List Packages"
			],
			[
				"select ",
				"UI: Select Theme"
			],
			[
				"select them",
				"UI: Select Theme"
			],
			[
				"pack",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 160.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/wangantony/Downloads/CSC148-Winter-2023",
		"/Users/wangantony/Downloads/CSC148-Winter-2023/preps",
		"/Users/wangantony/Downloads/CSC148-Winter-2023/preps/prep11"
	],
	"file_history":
	[
		"/Users/wangantony/Downloads/CSC148-Winter-2023/preps/prep11/prep11.py",
		"/Users/wangantony/Downloads/CSC148-Winter-2023/preps/prep11/prep11 copy.py",
		"/Users/wangantony/Downloads/CSC148-Winter-2023/preps/prep11/prep12.py",
		"/Users/wangantony/Downloads/CSC148-Winter-2023/preps/prep10/prep10.py",
		"/Users/wangantony/Downloads/CSC148-Winter-2023/labs/lab9/bst.py",
		"/Users/wangantony/Downloads/CSC148-Winter-2023/miscellaneous/test.py",
		"/Users/wangantony/Downloads/CSC148-Winter-2023/lectures/week10/bst_week10_starter_L0101.py",
		"/Users/wangantony/Downloads/CSC148-Winter-2023/assignments/a1/data/generated_course_hetero.json",
		"/Users/wangantony/Downloads/CSC148-Winter-2023/tm_trees_reference.py",
		"/Users/wangantony/Downloads/CSC148-Winter-2023/assignments/a2/tm_trees.py",
		"/Users/wangantony/Downloads/CSC148-Winter-2023/assignments/a2/tm_trees_referece2.py",
		"/Users/wangantony/Downloads/CSC148-Winter-2023/labs/lab8/tree.py",
		"/Users/wangantony/Downloads/CSC148-Winter-2023/labs/lab7/nested.py",
		"/Users/wangantony/Downloads/CSC148-Winter-2023/assignments/a1/grouper.py",
		"/Users/wangantony/Downloads/CSC148-Winter-2023/preps/prep9/prep9.py",
		"/Users/wangantony/Downloads/CSC148-Winter-2023/test.R",
		"/Users/wangantony/Downloads/CSC148-Winter-2023/preps/prep4/prep4.py",
		"/Users/wangantony/Downloads/CSC148-Winter-2023/preps/prep4/adts.py",
		"/Users/wangantony/Downloads/CSC148-Winter-2023/preps/prep3/prep3.py",
		"/Users/wangantony/Downloads/CSC148-Winter-2023/preps/prep6/prep6-2.py",
		"/Users/wangantony/Downloads/CSC148-Winter-2023/test.py",
		"/Users/wangantony/Downloads/CSC148-Winter-2023/preps/prep6/prep6.py",
		"/Users/wangantony/Downloads/CSC148-Winter-2023/assignments/a0/gym.py",
		"/Users/wangantony/Downloads/CSC148-Winter-2023/labs/lab5/linked_list.py",
		"/Users/wangantony/Downloads/CSC148-Winter-2023/preps/prep5/prep5.py",
		"/Users/wangantony/Downloads/CSC148-Winter-2023/labs/lab5/time_lists.py",
		"/Users/wangantony/Downloads/CSC148-Winter-2023/preps/prep2/prep2.py",
		"/Users/wangantony/Downloads/CSC148-Winter-2023/assignments/a0/gym_sample_tests.py",
		"/Users/wangantony/Downloads/CSC148-Winter-2023/preps/prep6/prep6 copy.py",
		"/Users/wangantony/Downloads/CSC148-Winter-2023/preps/prep5/prep5_starter_tests.py",
		"/Users/wangantony/Downloads/CSC148-Winter-2023/assignments/a0/test.py",
		"/Users/wangantony/Downloads/CSC148-Winter-2023/test2.py",
		"/Users/wangantony/Downloads/CSC148-Winter-2023/assignments/a0/gym1.py",
		"/Users/wangantony/Library/Application Support/Sublime Text/Packages/User/Anaconda.sublime-settings",
		"/Users/wangantony/Library/Application Support/Sublime Text/Packages/Anaconda/Anaconda.sublime-settings",
		"/Users/wangantony/Downloads/CSC148-Winter-2023/Midterm practices/Fall 2019/2019_fall_q3.py",
		"/Users/wangantony/Downloads/CSC148-Winter-2023/Midterm practices/Fall 2018/2019_fall_q3.py",
		"/Users/wangantony/Downloads/CSC148-Winter-2023/labs/lab4/timequeue.py",
		"/Users/wangantony/Downloads/CSC148-Winter-2023/labs/lab4/myqueue.py",
		"/Users/wangantony/Downloads/CSC148-Winter-2023/labs/lab4/mystack.py",
		"/Users/wangantony/Downloads/CSC148-Winter-2023/preps/prep3/prep3_starter_tests.py",
		"/Users/wangantony/Downloads/CSC148-Winter-2023/preps/prep4/prep4_starter_tests.py",
		"/Users/wangantony/Downloads/CSC148-Winter-2023/preps/prep2/prep2_starter_tests.py",
		"/Users/wangantony/Downloads/CSC148-Winter-2023/assignments/a0/design_recipes/course.py",
		"/Users/wangantony/Downloads/CSC148-Winter-2023/assignments/a0/athletic-centre.yaml",
		"/Users/wangantony/Library/Application Support/Sublime Text/Packages/Python Breakpoints/PythonBreakpoints.sublime-settings",
		"/Users/wangantony/Downloads/CSC148-Winter-2023/CSC148.sublime-project",
		"/Users/wangantony/Library/Application Support/Sublime Text/Packages/User/PythonBreakpoints.sublime-settings",
		"/Users/wangantony/Library/Application Support/Sublime Text/Packages/User/DashDoc.sublime-settings",
		"/Users/wangantony/Downloads/CSC148-Winter-2023/lectures/week3/super_duper_manager.py \u000e.gitFinderDeleted",
		"/Users/wangantony/Downloads/CSC148-Winter-2023/lectures/week3/super_duper_manager.py",
		"/Users/wangantony/Downloads/CSC148-Winter-2023/README.md",
		"/Users/wangantony/Downloads/148/test.py",
		"/Users/wangantony/Downloads/148/preps/prep3/prep3_starter_tests copy.py",
		"/Users/wangantony/Library/Application Support/Sublime Text/Packages/Default/Default (OSX).sublime-keymap",
		"/Users/wangantony/Downloads/148/test2.py",
		"/Users/wangantony/Downloads/148/preps/prep2/prep2_starter_tests.py",
		"/Users/wangantony/Downloads/148/test3.py",
		"/Users/wangantony/Downloads/148/test1.py",
		"/Users/wangantony/Downloads/148/preps/prep3/prep3_starter_tests.py",
		"/Users/wangantony/Downloads/148/labs/lab2/player.py",
		"/Users/wangantony/Downloads/148/preps/prep3/prep3 copy.py",
		"/Users/wangantony/Downloads/148/preps/prep3/prep3.py",
		"/Users/wangantony/Downloads/148/solution.py",
		"/Users/wangantony/Downloads/148/a19-solution.py",
		"/Users/wangantony/Downloads/148/Final Exam/test3.py",
		"/Users/wangantony/Library/Application Support/Sublime Text/Packages/User/AdvancedNewFile.sublime-settings",
		"/Users/wangantony/Library/Application Support/Sublime Text/Packages/User/Default (OSX).sublime-keymap",
		"/Users/wangantony/Library/Mobile Documents/com~apple~CloudDocs/custom-table.css",
		"/Users/wangantony/Downloads/148/test_.py",
		"/Users/wangantony/Downloads/148/labs/lab1/names.txt",
		"/Users/wangantony/Downloads/CSC148 Preview/untitled.sublime-project",
		"/Users/wangantony/Downloads/148/CSC148.sublime-project",
		"/Users/wangantony/Downloads/148/preps/prep1/prep2_starter_tests.py",
		"/Users/wangantony/Library/Application Support/Sublime Text/Packages/SideBarEnhancements/Side Bar.sublime-settings"
	],
	"find":
	{
		"height": 40.0
	},
	"find_in_files":
	{
		"height": 196.0,
		"where_history":
		[
			"<current file>",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"max_tree",
			"root.right",
			"root.left",
			"root.val",
			"key",
			"reduce",
			"if self._first is None:",
			"first",
			"next_",
			"next",
			"tup",
			"add_certificate",
			"foo",
			"var",
			"_item",
			"add_certificate",
			"get_certificates",
			"get_certificate",
			"add_certificate",
			"round",
			"pay",
			"total_salary",
			"_total_salary",
			"total_pay",
			"_total_salary",
			"__total_salary",
			"total_salary"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"tree_to_swap",
			"self._right",
			"self._left",
			"self._root",
			"item",
			"if self.is_empty():",
			"_first",
			"_next",
			"next_",
			"song",
			"var",
			"foo",
			"_items",
			"._items",
			"_items",
			"get_certificates",
			"_total_salary",
			"total_salary",
			"_total_salary"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "assignments/a2/tm_trees.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 35812,
						"regions":
						{
						},
						"selection":
						[
							[
								549,
								549
							]
						],
						"settings":
						{
							"_nv_visual_sel_mode": "mode_visual",
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"git_gutter_is_enabled": true,
							"lsp_uri": "file:///Users/wangantony/Downloads/CSC148-Winter-2023/assignments/a2/tm_trees.py",
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "preps/prep11/prep11.py",
					"selected": true,
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 6770,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"git_gutter_is_enabled": true,
							"lsp_uri": "file:///Users/wangantony/Downloads/CSC148-Winter-2023/preps/prep11/prep11.py",
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2987.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "assignments/a2/tm_trees_referece4.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 13602,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"git_gutter_is_enabled": true,
							"lsp_uri": "file:///Users/wangantony/Downloads/CSC148-Winter-2023/assignments/a2/tm_trees_referece4.py",
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 19.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "assignments/a2/tm_trees_referece3.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14554,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"git_gutter_is_enabled": true,
							"lsp_uri": "file:///Users/wangantony/Downloads/CSC148-Winter-2023/assignments/a2/tm_trees_referece3.py",
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "assignments/a2/tm_trees_referece2.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14493,
						"regions":
						{
						},
						"selection":
						[
							[
								6534,
								6534
							]
						],
						"settings":
						{
							"_nv_visual_sel_mode": "mode_visual",
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										6539,
										6540
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										6534,
										6535
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"git_gutter_is_enabled": true,
							"lsp_uri": "file:///Users/wangantony/Downloads/CSC148-Winter-2023/assignments/a2/tm_trees_referece2.py",
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 1.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "assignments/a2/tm_trees_reference.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 16822,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"git_gutter_is_enabled": true,
							"lsp_uri": "file:///Users/wangantony/Downloads/CSC148-Winter-2023/assignments/a2/tm_trees_reference.py",
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "preps/prep11/prep11 copy 2.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7412,
						"regions":
						{
						},
						"selection":
						[
							[
								12,
								12
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"git_gutter_is_enabled": false,
							"lsp_uri": "file:///Users/wangantony/Downloads/CSC148-Winter-2023/preps/prep11/prep11%20copy%202.py",
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 40.0
	},
	"input":
	{
		"height": 80.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.Debugger":
	{
		"height": 582.0
	},
	"output.Debugger Console":
	{
		"height": 156.0
	},
	"output.Debugger Terminal":
	{
		"height": 669.0
	},
	"output.Debugger Terminal(1)":
	{
		"height": 504.0
	},
	"output.LSP Log Panel":
	{
		"height": 0.0
	},
	"output.SublimeLinter":
	{
		"height": 0.0
	},
	"output.Terminus":
	{
		"height": 269.0
	},
	"output.Terminus 2":
	{
		"height": 358.0
	},
	"output.diagnostics":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 489.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.latextools":
	{
		"height": 0.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "CSC148.sublime-project",
	"replace":
	{
		"height": 76.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"test2",
				"test2.py"
			],
			[
				"test1",
				"test1.py"
			],
			[
				"",
				"labs/lab1/names.txt"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Library/Mobile Documents/com~apple~CloudDocs/LaTeX/untitled.sublime-workspace"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 305.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 592.0
	},
	"selected_group": 0,
	"settings":
	{
		"_vintageous_last_buff_search_command": "nv_vi_octothorp",
		"_vintageous_last_buff_search_pattern": "import",
		"_vintageous_last_char_search_character": "l",
		"_vintageous_last_char_search_command": "vi_f",
		"_vintageous_reset_during_init": true
	},
	"show_minimap": false,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 257.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
